---
import CourseCard from './CourseCard.astro';
import { ApiPath } from "../utils/apiPath";

interface Course {
  courseId: number;
  courseTitle: string;
  courseTypeName: string;
  mode?: string;
  progressPercentage?: number;
}

const studentId = 1;

const fetchCourses = async () => {
  try {
    const res = await fetch(`${ApiPath}student-courses/by-student/${studentId}`);
    if (!res.ok) {
      throw new Error("Failed to fetch courses");
    }
    return await res.json();
  } catch (error) {
    console.error("Error fetching courses:", error);
    return [];
  }
};

const courses = await fetchCourses();
---

<section class="flex flex-col gap-4 pb-6">
  <p class="font-extrabold text-gray-800 w-full border-b border-gray-800 pb-4">
    2025 - Ciclo 1 Marzo PREG (001) (Actual)
  </p>

  <div class="grid grid-cols-2 lg:grid-cols-1 xl:grid-cols-2 2xl:grid-cols-3 gap-4 py-6">
    {courses.length > 0 ? (
        courses.map((course: Course) => (
            <CourseCard
                key={course.courseId.toString()}
                courseId={course.courseId}
                name={course.courseTitle}
                section={"AsincrÃ³nico"}
                mode={course.courseTypeName}
                progressPercentage={course.progressPercentage || 0}
            />
    ))
    ) : (
    <p class="text-center text-gray-500">No se encontraron cursos disponibles.</p>
    )}
  </div>
</section>