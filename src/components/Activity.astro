---
import { Icon } from "astro-icon/components";

interface Props {
  name: string
  typeActivity: string
  course?: string
  isRated?: boolean
  importance?: "Importante" | "No Importante"
  urgency?: boolean
}


const { name, typeActivity, isRated, course, importance, urgency } = Astro.props;

let svgIcon = "Notes";

switch (typeActivity) {
  case "Foro de discusi√≥n":
    svgIcon = "BubbleSquare";
    break;
  case "Tarea":
    svgIcon = "Task";
    break;
  case "Examen":
    svgIcon = "Exam";
    break;
  case "Proyecto":
    svgIcon = "Project";
    break;
  default:
    svgIcon = "Notes";
}

let borderColor = "border-gray-300";
let shadowColor = "shadow-gray-300";

if (importance === "Importante" && urgency) {
  borderColor = "border-[#e53935]";
  shadowColor = "shadow-[0_0_0_1px_#e538354d]";
} else if (importance === "Importante") {
  borderColor = "border-[#fbc02d]";
  shadowColor = "shadow-[0_0_0_1px_#fbc12d4d]";
} else {
  borderColor = "border-[#43a047]";
  shadowColor = "shadow-[0_0_0_1px_#43a0484d]";
}

const ratedText = isRated ? "Calificada" : "No Calificada";
const ratedClass = isRated ? "bg-[#000f37]" : "bg-[#ffab00]";

const importanceOptions = importance ? "hidden": "flex";

---

<div class="flex flex-col rounded-br-sm rounded-bl-sm">
  <div class={`flex flex-row justify-between items-center w-full border-l-4 ${borderColor} shadow-2xl ${shadowColor} bg-white h-full py-4 px-5 gap-4 rounded-sm cursor-pointer hover:bg-gray-50`}>
    <div class="flex flex-row gap-3 items-center">
      <div class="w-4 flex items-start">
        <Icon name={svgIcon} class="w-4 h-4 text-[#4a5565]" />
      </div>
      <div class="flex flex-col gap-0.5 sm:w-40 md:w-40 lg:w-28">
        <span class="text-gray-500 text-sm">{typeActivity}</span>
        <p class="font-bold">{name}</p>
      </div>
    </div>
    <div class="hidden md:flex items-center justify-center border border-[#0661fc] text-[#0661fc] rounded-md px-4 py-3 gap-1 hover:bg-[rgba(6,96,252,0.1)] transition-colors duration-200 cursor-pointer">
      <div>
        <Icon name="Book" class="w-6 h-6" />
      </div>
      <span class="text-sm font-bold truncate max-w-[130px]" title={course}>{course}</span>
    </div>
    <div class={`hidden sm:flex flex-row items-center justify-center gap-1 rounded-full ${ratedClass} py-[4px] px-3 text-[12px] font-bold text-white text-center w-[96px]`}>
      <p>{ratedText}</p>
    </div>
    <div class="hidden lg:flex flex-col items-end">
      <span class="font-bold">Desde: 24/03/25 a las 12:00 a.m.</span>
      <span class="font-bold">Hasta: 24/03/25 a las 12:00 a.m.</span>
    </div>
    <div class={`${importanceOptions} importance-group flex-row items-center justify-center gap-4`}>
      <div tabindex="0" class="importance-up rounded-full border-2 border-[#07d4cf] text-[#07d4cf] p-1 hover:bg-[rgba(7,212,208,0.1)] transition-all duration-100 cursor-pointer">
        <Icon name="UpArrow" class="w-6 h-6" />
      </div>
      <div tabindex="0" class="importance-down rounded-full border-2 border-[#e04c65] text-[#e04c65] p-1 hover:bg-[rgba(224,76,101,0.1)] transition-all duration-100 cursor-pointer">
        <Icon name="DropArrow" class="w-6 h-6" />
      </div>
    </div>



  </div>
</div>

<script type="module">
  document.addEventListener("DOMContentLoaded", () => {
    const groups = document.querySelectorAll(".importance-group");

    groups.forEach(group => {
      const upBtn = group.querySelector(".importance-up");
      const downBtn = group.querySelector(".importance-down");

      const activeClassUp = "bg-[rgba(7,212,208,0.35)]";
      const activeClassDown = "bg-[rgba(224,76,101,0.35)]";

      upBtn?.addEventListener("click", () => {
        upBtn.classList.add(activeClassUp);
        downBtn.classList.remove(activeClassDown);
      });

      downBtn?.addEventListener("click", () => {
        downBtn.classList.add(activeClassDown);
        upBtn.classList.remove(activeClassUp);
      });
    });
  });
</script>

